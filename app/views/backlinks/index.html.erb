<div class="container">
  <div class="row">
    <!-- Filtering Card -->
    <div class="col-md-12">
      <div class="card mb-4">
        <div class="card-header">
          Filter Backlinks
        </div>
        <div class="card-body">
          <form id="filter-form">
            <div class="row">
              <!-- Country and Category Drop-downs on the same row -->
              <div class="col-md-6">
                <div class="form-group">
                  <label for="country">Country</label>
                  <select id="countryFilter" class="form-control">
                    <option value="">All Countries</option>
                    <% @backlinks.pluck(:country).uniq.each do |country| %>
                      <option value="<%= country %>"><%= country %></option>
                    <% end %>
                  </select>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <label for="category">Category</label>
                  <select id="categoryFilter" class="form-control">
                    <option value="">All Categories</option>
                    <% @backlinks.pluck(:category).uniq.each do |category| %>
                      <option value="<%= category %>"><%= category %></option>
                    <% end %>
                  </select>
                </div>
              </div>
            </div>

            <!-- Filtering radio buttons -->
            <div class="row">
              <div class="col-md-4">
                <div class="form-group">
                  <label for="article_writing">Article Writing</label><br>
                  <input type="radio" name="articleWriting" value="true"> Yes
                  <input type="radio" name="articleWriting" value="false"> No
                  <input type="radio" name="articleWriting" value="" checked> Any
                </div>
              </div>

              <div class="col-md-4">
                <div class="form-group">
                  <label for="cs_possible">CS Possible</label><br>
                  <input type="radio" name="csPossible" value="true"> Yes
                  <input type="radio" name="csPossible" value="false"> No
                  <input type="radio" name="csPossible" value="" checked> Any
                </div>
              </div>

              <div class="col-md-4">
                <div class="form-group">
                  <label for="special_price">Special Price</label><br>
                  <input type="radio" name="specialPrice" value="true"> Yes
                  <input type="radio" name="specialPrice" value="false"> No
                  <input type="radio" name="specialPrice" value="" checked> Any
                </div>
              </div>
            </div>

            <button type="button" id="filter-btn" class="btn btn-primary">Filter</button>
            <button type="button" id="reset-btn" class="btn btn-secondary">Reset</button>
          </form>
        </div>
      </div>
    </div>

    <!-- Backlinks Table Card -->
    <div class="col-md-12">
      <div class="card">
        <div class="card-header">
          Backlinks
        </div>
        <div class="card-body table-responsive">
          <table class="table table-striped" id="backlinksTable">
            <thead>
              <tr>
                <th data-sort="country">Country</th>
                <th>Site</th>
                <th data-sort="price">Price</th>
                <th data-sort="traffic">Traffic</th>
                <th data-sort="domain_rank">Domain Rank</th>
                <th>Category</th>
                <th>Article Writing</th>
                <th>CS Possible</th>
                <th>Special Price</th>
              </tr>
            </thead>
            <tbody>
              <% @backlinks.each do |backlink| %>
                <tr>
                  <td><%= backlink.country %></td>
                  <td><%= backlink.site %></td>
                  <td>&#8364;<%= backlink.price %></td>
                  <td><%= backlink.traffic %></td>
                  <td><%= backlink.domain_rank %></td>
                  <td><%= backlink.category %></td>
                  <td><%= backlink.article_writing ? 'Yes' : 'No' %></td>
                  <td><%= backlink.cs_possible ? 'Yes' : 'No' %></td>
                  <td><%= backlink.special_price ? 'Yes' : 'No' %></td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
        <!-- Pagination controls -->
        <div id="pagination-controls"></div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('turbo:load', function () {
    initBacklinkTable();
  });

  function initBacklinkTable() {
    const table = document.getElementById('backlinksTable');
    const rows = Array.from(table.querySelectorAll('tbody tr'));

    let currentPage = 1;
    const rowsPerPage = 10;

    // Sorting functionality
    document.querySelectorAll('th[data-sort]').forEach(header => {
      header.addEventListener('click', function () {
        const sortType = header.dataset.sort;
        const ascending = header.classList.contains('ascending');
        const sortedRows = rows.sort((a, b) => {
          let aValue = a.querySelector(`td:nth-child(${header.cellIndex + 1})`).textContent.trim();
          let bValue = b.querySelector(`td:nth-child(${header.cellIndex + 1})`).textContent.trim();

          if (sortType === 'price' || sortType === 'traffic' || sortType === 'domain_rank') {
            aValue = parseFloat(aValue) || 0;
            bValue = parseFloat(bValue) || 0;
          } else {
            aValue = aValue.toLowerCase();
            bValue = bValue.toLowerCase();
          }

          return ascending ? (aValue > bValue ? 1 : -1) : (aValue < bValue ? 1 : -1);
        });

        header.classList.toggle('ascending', !ascending);

        table.querySelector('tbody').innerHTML = '';
        sortedRows.forEach(row => table.querySelector('tbody').appendChild(row));

        renderTable(currentPage);
      });
    });

    // Filter functionality
    document.getElementById('filter-btn').addEventListener('click', function () {
      const countryFilter = document.getElementById('countryFilter').value.toLowerCase();
      const categoryFilter = document.getElementById('categoryFilter').value.toLowerCase();
      const articleWritingFilter = document.querySelector('input[name="articleWriting"]:checked').value;
      const csPossibleFilter = document.querySelector('input[name="csPossible"]:checked').value;
      const specialPriceFilter = document.querySelector('input[name="specialPrice"]:checked').value;

      rows.forEach(row => {
        const country = row.children[0].textContent.toLowerCase();
        const category = row.children[5].textContent.toLowerCase();
        const articleWriting = row.children[6].textContent === 'Yes';
        const csPossible = row.children[7].textContent === 'Yes';
        const specialPrice = row.children[8].textContent === 'Yes';

        const showRow = (!countryFilter || country.includes(countryFilter)) &&
          (!categoryFilter || category.includes(categoryFilter)) &&
          (articleWritingFilter === '' || String(articleWriting) === articleWritingFilter) &&
          (csPossibleFilter === '' || String(csPossible) === csPossibleFilter) &&
          (specialPriceFilter === '' || String(specialPrice) === specialPriceFilter);

        row.style.display = showRow ? '' : 'none';
      });

      renderTable(1);
    });

    // Reset functionality
    document.getElementById('reset-btn').addEventListener('click', function () {
      document.getElementById('filter-form').reset();
      rows.forEach(row => row.style.display = '');
      renderTable(1);
    });

    // Pagination functionality
    function renderTable(page) {
      currentPage = page;
      const start = (page - 1) * rowsPerPage;
      const end = start + rowsPerPage;
      rows.forEach((row, index) => {
        row.style.display = (index >= start && index < end) ? '' : 'none';
      });

      renderPaginationControls();
    }

    function renderPaginationControls() {
      const paginationControls = document.getElementById('pagination-controls');
      paginationControls.innerHTML = '';

      const totalPages = Math.ceil(rows.length / rowsPerPage);
      for (let i = 1; i <= totalPages; i++) {
        const pageButton = document.createElement('button');
        pageButton.textContent = i;
        pageButton.classList.add('btn', 'btn-primary', 'mr-2');
        if (i === currentPage) {
          pageButton.classList.add('active');
        }

        pageButton.addEventListener('click', function () {
          renderTable(i);
        });

        paginationControls.appendChild(pageButton);
      }
    }

